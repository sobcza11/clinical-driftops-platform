name: DriftOps CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade pip & install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Use file-based MLflow store so artifacts are captured & uploaded
      - name: Set MLflow backend (file-based)
        run: echo "MLFLOW_TRACKING_URI=file://$GITHUB_WORKSPACE/mlruns" >> $GITHUB_ENV

      - name: Ensure reports dir
        run: mkdir -p reports

      # --- Data prep FIRST so downstream steps have files ---
      - name: Data prep (baseline/current)
        run: |
          python src/data_prep.py --scaler standard --outliers zscore
          ls -lah data | sed -n '1,200p'

      # --- Drift detection ---
      - name: Drift detector
        run: python src/monitors/drift_detector.py

      # --- Explainability (SHAP) ---
      # If your current prepared CSV lives at data/data_prepared_current.csv, keep this path.
      - name: SHAP explainability
        run: |
          python src/explain/shap_summary.py \
            --data data/data_prepared_current.csv \
            --out reports/shap_top_features.png \
            --topk 15

      # --- Fairness audit (optional but expected by gate to warn if missing) ---
      # If you have this script, keep it; otherwise comment this step out.
      - name: Fairness audit
        run: python src/eval/fairness_audit.py
        continue-on-error: true

      # --- Enforce thresholds ---
      - name: Policy gate
        run: python src/ops/policy_gate.py

      # --- Upload artifacts regardless of pass/fail ---
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: driftops-reports
          path: |
            reports/**
            mlruns/**
            policy.yaml
